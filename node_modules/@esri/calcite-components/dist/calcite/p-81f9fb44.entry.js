/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.13.0
 */
import{a as t,r as i,h as s,H as n,g as c}from"./p-0a2f91d4.js";import{g as e,t as o}from"./p-806dc8f8.js";import{c as a}from"./p-966e4808.js";import{i as l}from"./p-df6c8bd7.js";import"./p-39b20f1d.js";import"./p-cedaddf4.js";const r={icon:"icon",flipRtl:"flip-rtl"};const h={};const d={};const f={s:16,m:24,l:32};function p({icon:t,scale:i}){const s=f[i];const n=x(t);const c=n.charAt(n.length-1)==="F";const e=c?n.substring(0,n.length-1):n;return`${e}${s}${c?"F":""}`}async function u(i){const s=p(i);const n=b(s);if(n){return n}if(!d[s]){d[s]=fetch(t(`./assets/icon/${s}.json`)).then((t=>t.json())).catch((()=>{console.error(`"${s}" is not a valid calcite-ui-icon name`);return""}))}const c=await d[s];h[s]=c;return c}function m(t){return b(p(t))}function b(t){return h[t]}function x(t){const i=!isNaN(Number(t.charAt(0)));const s=t.split("-");const n=s.length>0;if(n){const i=/[a-z]/i;t=s.map(((t,s)=>t.replace(i,(function t(i,n){const c=s===0&&n===0;if(c){return i}return i.toUpperCase()})))).join("")}return i?`i${t}`:t}const g=":host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}";const z=g;const k=class{constructor(t){i(this,t);this.icon=null;this.flipRtl=false;this.scale="m";this.textLabel=undefined;this.pathData=undefined;this.visible=false}connectedCallback(){if(!this.visible){this.waitUntilVisible((()=>{this.visible=true;this.loadIconPathData()}))}}disconnectedCallback(){this.intersectionObserver?.disconnect();this.intersectionObserver=null}render(){const{el:t,flipRtl:i,pathData:c,scale:a,textLabel:l}=this;const h=e(t);const d=f[a];const p=!!l;const u=[].concat(c||"");return s(n,{key:"724265acdc6fb528bf7b25d7ec445c73a63f4c8e","aria-hidden":o(!p),"aria-label":p?l:null,role:p?"img":null},s("svg",{key:"864ee2d80bebd282543ba5d94c57f84b48a6204d","aria-hidden":"true",class:{[r.flipRtl]:h==="rtl"&&i,svg:true},fill:"currentColor",height:"100%",viewBox:`0 0 ${d} ${d}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},u.map((t=>typeof t==="string"?s("path",{d:t}):s("path",{d:t.d,opacity:"opacity"in t?t.opacity:1})))))}async loadIconPathData(){const{icon:t,scale:i,visible:s}=this;if(!l()||!t||!s){return}const n={icon:t,scale:i};const c=m(n)||await u(n);if(t!==this.icon){return}this.pathData=c}waitUntilVisible(t){this.intersectionObserver=a("intersection",(i=>{i.forEach((i=>{if(i.isIntersecting){this.intersectionObserver.disconnect();this.intersectionObserver=null;t()}}))}),{rootMargin:"50px"});if(!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return c(this)}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}};k.style=z;export{k as calcite_icon};
//# sourceMappingURL=p-81f9fb44.entry.js.map